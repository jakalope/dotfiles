#!/bin/bash

cwd=$(pwd)
if [[ $# != 0 ]]; then
    cd $(readlink -f $(dirname $1))
    shift
fi

while [[ ! -f Makefile && ! -f BUILD && ! -f package.xml && ! -f manifest.xml && $(pwd) != "/" ]]
do
    cd ..
done

if [[ ${MAKE} == "" ]]; then
    MAKE='make -j'
fi

if [[ -f BUILD ]]; then
    bazel test "${@}" --test_output=errors ...
elif [[ -f package.xml ]]; then
    # this is a catkin package; find accompanying build folder
    # extract the name of the package
    package=$(pwd)         # get current directory
    package=${package##*/} # /foo/bar/too -> too
    # search for root of build system, as it contains build/${package}/build_env.sh
    build_env="build/${package}/build_env.sh"
    while [[ ! -e ${build_env} ]]; do
        if [[ $(pwd) == "/" ]]; then
            echo "Failed to find a directory containing ${build_env}"
            exit 1
        fi
        cd ..
    done
    # enter the build package folder
    cd build/${package}
    ${MAKE}
elif [[ -f manifest.xml ]]; then
    # this is a rosbuild package
    ${MAKE}
elif [[ -f Makefile ]]; then
    ${MAKE}
else
    echo "No package found below $cwd" 1>&2
fi

