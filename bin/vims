#!/bin/bash

VIMEXEC='vim'

if [[ ${VIMSERVER} == "" ]]; then
    VIMSERVER="VIM"
fi

# Check if we're being piped some input
if [[ ! -t 0 && $# == 0 ]]; then
    # If so, expect it in "<filename>[:linenumber[:garbage]]" format, 
    # separated by newlines and open each file in a separate tab by calling
    # this script recursively
    awk '{print $1}' | awk -F: '{print "vims +"$2 " " $1}' | bash
# Check if we have some arguments
elif [[ $# > 0 ]]; then
    # get the current working directory of the vim server
    cwd=$("$VIMEXEC" --servername $VIMSERVER --remote-expr 'getcwd()')
    if [[ ${1} == '-v' ]]; then
        # remove the -v
        shift
        # tell the vim server to open the file in a new tab
        "$VIMEXEC" --servername $VIMSERVER --remote-tab "$1"
        # wait for vim to open the file
        sleep 0.1 
        # open a new v-split
        "$VIMEXEC" --servername $VIMSERVER --remote-send ':vsp<CR>'
        # wait for the new v-split to open
        sleep 0.1 
        # remove the first file from the argument list
        shift
        # open the second file in the new vsplit
        "$VIMEXEC" --servername $VIMSERVER --remote "$1"
    elif [[ ${1} == '-t' ]]; then
        # tell the vim server to open the file
        file=$(readlink -f "${cwd}/$(xsel --clipboard --output | awk -F: '{print $1}')")
        "$VIMEXEC" --servername $VIMSERVER --remote-tab-silent "${file}"
        # wait for vim to open the file
        sleep 0.1 
        # move the to appropriate line
        "$VIMEXEC" --servername $VIMSERVER --remote-send $(xsel --clipboard --output | awk -F: '{print ":" $2 "<CR>"}')
    else
        # tell the vim server to open the file
        while ((${#@})); do
            "$VIMEXEC" --servername $VIMSERVER --remote-tab-silent $(readlink -f "$(pwd)/${1}")
            shift
        done
    fi  
# Nothing from stdin, no arguemnts, so start a server
else
    "$VIMEXEC" --servername $VIMSERVER
fi

