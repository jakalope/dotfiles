#!/bin/bash

function set_cwd_file() {
    echo "${1}" > "${CWD_FILE}"
}

function paste() {
	if [[ "$(uname -s)" == "Darwin" ]]; then
		pbpaste
	else
		xsel --clipboard --output
	fi
}

function open_file_to_line() {
    # tell the vim server to open the file
    local raw="${1//:*}" # remove trailing characters after the filename
    local line="${1#*:}" # keep only the suffix after the filename
    local line="${line%%:*}"  # keep only the prefix of the suffix; the line#

	# Correct the case where no colon is given.
	if [[ "$raw" == "$line" ]]; then
		line=""
    else
        line="+$line"
	fi

    local vim_cwd_file="$(readlink "${MY_WORKSPACE_DIR}/$raw")"
    local cmd_cwd_file="$(readlink "$(pwd)/$raw")"

    if [[ -e "$raw" ]]; then
        echo RAW >> ${HOME}/vims_usage
        $VIMEXEC --remote-wait-silent ${line} ${raw}
        echo "$VIMEXEC --remote-wait-silent ${line} ${raw}"
    elif [[ -e "$vim_cwd_file" ]]; then
        echo VIM_CWD >> ${HOME}/vims_usage
        $VIMEXEC --remote-wait-silent ${line} ${vim_cwd_file}
    elif [[ -e "$cmd_cwd_file" ]]; then
        echo CMD_CWD >> ${HOME}/vims_usage
        $VIMEXEC --remote-wait-silent ${line} ${cmd_cwd_file}
    else
        echo "Couldn't find any of the following:"
        echo "  $raw"
        echo "  ${vim_cwd_file}"
        echo "  ${cmd_cwd_file}"
        echo
        echo "NOTE: "
        echo "  pwd => $(pwd)"
        echo "  cwd => ${MY_WORKSPACE_DIR}"
        echo
        if [[ "$line" == "" ]]; then
            echo "No line specified. Creating new file..."
            $VIMEXEC --remote-wait-silent ${raw}
        else
            return 1
        fi
    fi
    return 0
}

SLEEP_TIME='0.5'

if [[ "$NVIM_LISTEN_ADDRESS" != "" ]]; then
	# Get the name of our Neovim server.
	VIMSERVER="$(nvr --serverlist)"
	# Use NeoVimRemote.
	VIMEXEC="nvr -l"
else
	if [[ ${VIMSERVER} == "" ]]; then
		VIMSERVER="VIM"
	fi
	VIMEXEC="gvim --servername $VIMSERVER"
fi

# Check if we're being piped some input
if [[ ! -t 0 && $# == 0 ]]; then
    # If so, expect it in "<filename>[:linenumber[:garbage]]" format,
    # separated by newlines and open each file in a separate tab by calling
    # this script recursively
    awk '{print $1}' | awk -F: '{print "vims " $1 ":" $2}' | bash
# Check if we have some arguments
elif [[ $# > 0 ]]; then
    if [[ ${1} == '-v' ]]; then
        # remove the -v
        shift
        # tell the vim server to open the file in a new tab
        $VIMEXEC --remote-tab "$1"
        # wait for vim to open the file
        sleep $SLEEP_TIME
        # open a new v-split
        $VIMEXEC --remote-send ':vsp<CR>'
        # wait for the new v-split to open
        sleep $SLEEP_TIME
        # remove the first file from the argument list
        shift
        # open the second file in the new vsplit
        $VIMEXEC --remote "$1"
    elif [[ ${1} == '-t' ]]; then
        open_file_to_line "$(paste)"
    else
        open_file_to_line "${@}"
    fi
# Nothing from stdin, no arguemnts, so start a server
else
    #TODO Check if a server is already running under this name
    pwd > ~/${VIMSERVER}
    $VIMEXEC 
fi

